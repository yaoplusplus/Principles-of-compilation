Terminals unused in grammar

   BOOL
   VOID
   DQUOTATION
   NEG


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: statement
    3           | statements statement

    4 statement: SEMICOLON
    5          | declaration
    6          | assign SEMICOLON
    7          | LBRACE statements RBRACE
    8          | LBRACE RBRACE
    9          | expr SEMICOLON
   10          | if_else
   11          | while
   12          | scanf SEMICOLON
   13          | printf SEMICOLON
   14          | for

   15 declaration: T IDENTIFIER LOP_ASSIGN expr SEMICOLON
   16            | T IDENTIFIERLIST SEMICOLON
   17            | T MAIN LPAREN RPAREN statement

   18 IDENTIFIERLIST: IDENTIFIER
   19               | IDENTIFIERLIST COMMA IDENTIFIER

   20 assign: IDENTIFIER LOP_ASSIGN expr
   21       | IDENTIFIER MINASSIGN expr
   22       | IDENTIFIER ADDASSIGN expr

   23 if_else: IF bool_statment statement
   24        | IF bool_statment statement ELSE statement

   25 while: WHILE bool_statment statement

   26 printf: PRINTF LPAREN expr COMMA expr RPAREN
   27       | PRINTF LPAREN expr RPAREN

   28 scanf: SCANF LPAREN expr COMMA expr RPAREN
   29      | SCANF LPAREN expr COMMA IDADDR RPAREN
   30      | SCANF LPAREN expr RPAREN

   31 for: FOR LPAREN declaration bool_expr SEMICOLON expr RPAREN statement

   32 bool_statment: LPAREN bool_expr RPAREN

   33 expr: IDENTIFIER
   34     | INTEGER
   35     | CHAR
   36     | STRING
   37     | MINUS expr
   38     | expr ADD expr
   39     | expr MINUS expr
   40     | expr MUL expr
   41     | expr DIV expr
   42     | expr MOD expr
   43     | TAKEADDR expr
   44     | expr SELFADD
   45     | expr SELFMIN

   46 bool_expr: TRUE
   47          | FALSE
   48          | expr
   49          | bool_expr LOP_EQ bool_expr
   50          | bool_expr LOG_AND bool_expr
   51          | bool_expr LOG_OR bool_expr
   52          | bool_expr MORETHAN bool_expr
   53          | bool_expr LESSTHAN bool_expr
   54          | bool_expr MORETHANEQ bool_expr
   55          | bool_expr LESSTHANEQ bool_expr
   56          | NOT bool_expr

   57 T: T_INT
   58  | T_CHAR
   59  | T_BOOL
   60  | T_STRING
   61  | T_VOID


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 23 24
ELSE (259) 24
WHILE (260) 25
FOR (261) 31
PRINTF (262) 26 27
SCANF (263) 28 29 30
TRUE (264) 46
FALSE (265) 47
T_CHAR (266) 58
T_INT (267) 57
T_STRING (268) 60
T_BOOL (269) 59
T_VOID (270) 61
IDENTIFIER (271) 15 18 19 20 21 22 33
IDADDR (272) 29
INTEGER (273) 34
CHAR (274) 35
BOOL (275)
STRING (276) 36
VOID (277)
MAIN (278) 17
SEMICOLON (279) 4 6 9 12 13 15 16 31
COMMA (280) 19 26 28 29
DQUOTATION (281)
LBRACE (282) 7 8
RBRACE (283) 7 8
LPAREN (284) 17 26 27 28 29 30 31 32
RPAREN (285) 17 26 27 28 29 30 31 32
LOP_ASSIGN (286) 15 20
TAKEADDR (287) 43
ADD (288) 38
MINUS (289) 37 39
MUL (290) 40
DIV (291) 41
MOD (292) 42
SELFADD (293) 44
SELFMIN (294) 45
NEG (295)
LOG_AND (296) 50
LOG_OR (297) 51
LESSTHAN (298) 53
MORETHAN (299) 52
LESSTHANEQ (300) 55
MORETHANEQ (301) 54
MINASSIGN (302) 21
ADDASSIGN (303) 22
LOP_EQ (304) 49
NOT (305) 56
UMINUS (306)
LOWER_THEN_ELSE (307)


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
program (54)
    on left: 1, on right: 0
statements (55)
    on left: 2 3, on right: 1 3 7
statement (56)
    on left: 4 5 6 7 8 9 10 11 12 13 14, on right: 2 3 17 23 24 25
    31
declaration (57)
    on left: 15 16 17, on right: 5 31
IDENTIFIERLIST (58)
    on left: 18 19, on right: 16 19
assign (59)
    on left: 20 21 22, on right: 6
if_else (60)
    on left: 23 24, on right: 10
while (61)
    on left: 25, on right: 11
printf (62)
    on left: 26 27, on right: 13
scanf (63)
    on left: 28 29 30, on right: 12
for (64)
    on left: 31, on right: 14
bool_statment (65)
    on left: 32, on right: 23 24 25
expr (66)
    on left: 33 34 35 36 37 38 39 40 41 42 43 44 45, on right: 9 15
    20 21 22 26 27 28 29 30 31 37 38 39 40 41 42 43 44 45 48
bool_expr (67)
    on left: 46 47 48 49 50 51 52 53 54 55 56, on right: 31 32 49 50
    51 52 53 54 55 56
T (68)
    on left: 57 58 59 60 61, on right: 15 16 17


State 0

    0 $accept: . program $end

    IF          shift, and go to state 1
    WHILE       shift, and go to state 2
    FOR         shift, and go to state 3
    PRINTF      shift, and go to state 4
    SCANF       shift, and go to state 5
    T_CHAR      shift, and go to state 6
    T_INT       shift, and go to state 7
    T_STRING    shift, and go to state 8
    T_BOOL      shift, and go to state 9
    T_VOID      shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    INTEGER     shift, and go to state 12
    CHAR        shift, and go to state 13
    STRING      shift, and go to state 14
    SEMICOLON   shift, and go to state 15
    LBRACE      shift, and go to state 16
    TAKEADDR    shift, and go to state 17
    MINUS       shift, and go to state 18

    program      go to state 19
    statements   go to state 20
    statement    go to state 21
    declaration  go to state 22
    assign       go to state 23
    if_else      go to state 24
    while        go to state 25
    printf       go to state 26
    scanf        go to state 27
    for          go to state 28
    expr         go to state 29
    T            go to state 30


State 1

   23 if_else: IF . bool_statment statement
   24        | IF . bool_statment statement ELSE statement

    LPAREN  shift, and go to state 31

    bool_statment  go to state 32


State 2

   25 while: WHILE . bool_statment statement

    LPAREN  shift, and go to state 31

    bool_statment  go to state 33


State 3

   31 for: FOR . LPAREN declaration bool_expr SEMICOLON expr RPAREN statement

    LPAREN  shift, and go to state 34


State 4

   26 printf: PRINTF . LPAREN expr COMMA expr RPAREN
   27       | PRINTF . LPAREN expr RPAREN

    LPAREN  shift, and go to state 35


State 5

   28 scanf: SCANF . LPAREN expr COMMA expr RPAREN
   29      | SCANF . LPAREN expr COMMA IDADDR RPAREN
   30      | SCANF . LPAREN expr RPAREN

    LPAREN  shift, and go to state 36


State 6

   58 T: T_CHAR .

    $default  reduce using rule 58 (T)


State 7

   57 T: T_INT .

    $default  reduce using rule 57 (T)


State 8

   60 T: T_STRING .

    $default  reduce using rule 60 (T)


State 9

   59 T: T_BOOL .

    $default  reduce using rule 59 (T)


State 10

   61 T: T_VOID .

    $default  reduce using rule 61 (T)


State 11

   20 assign: IDENTIFIER . LOP_ASSIGN expr
   21       | IDENTIFIER . MINASSIGN expr
   22       | IDENTIFIER . ADDASSIGN expr
   33 expr: IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 37
    MINASSIGN   shift, and go to state 38
    ADDASSIGN   shift, and go to state 39

    $default  reduce using rule 33 (expr)


State 12

   34 expr: INTEGER .

    $default  reduce using rule 34 (expr)


State 13

   35 expr: CHAR .

    $default  reduce using rule 35 (expr)


State 14

   36 expr: STRING .

    $default  reduce using rule 36 (expr)


State 15

    4 statement: SEMICOLON .

    $default  reduce using rule 4 (statement)


State 16

    7 statement: LBRACE . statements RBRACE
    8          | LBRACE . RBRACE

    IF          shift, and go to state 1
    WHILE       shift, and go to state 2
    FOR         shift, and go to state 3
    PRINTF      shift, and go to state 4
    SCANF       shift, and go to state 5
    T_CHAR      shift, and go to state 6
    T_INT       shift, and go to state 7
    T_STRING    shift, and go to state 8
    T_BOOL      shift, and go to state 9
    T_VOID      shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    INTEGER     shift, and go to state 12
    CHAR        shift, and go to state 13
    STRING      shift, and go to state 14
    SEMICOLON   shift, and go to state 15
    LBRACE      shift, and go to state 16
    RBRACE      shift, and go to state 40
    TAKEADDR    shift, and go to state 17
    MINUS       shift, and go to state 18

    statements   go to state 41
    statement    go to state 21
    declaration  go to state 22
    assign       go to state 23
    if_else      go to state 24
    while        go to state 25
    printf       go to state 26
    scanf        go to state 27
    for          go to state 28
    expr         go to state 29
    T            go to state 30


State 17

   43 expr: TAKEADDR . expr

    IDENTIFIER  shift, and go to state 42
    INTEGER     shift, and go to state 12
    CHAR        shift, and go to state 13
    STRING      shift, and go to state 14
    TAKEADDR    shift, and go to state 17
    MINUS       shift, and go to state 18

    expr  go to state 43


State 18

   37 expr: MINUS . expr

    IDENTIFIER  shift, and go to state 42
    INTEGER     shift, and go to state 12
    CHAR        shift, and go to state 13
    STRING      shift, and go to state 14
    TAKEADDR    shift, and go to state 17
    MINUS       shift, and go to state 18

    expr  go to state 44


State 19

    0 $accept: program . $end

    $end  shift, and go to state 45


State 20

    1 program: statements .
    3 statements: statements . statement

    IF          shift, and go to state 1
    WHILE       shift, and go to state 2
    FOR         shift, and go to state 3
    PRINTF      shift, and go to state 4
    SCANF       shift, and go to state 5
    T_CHAR      shift, and go to state 6
    T_INT       shift, and go to state 7
    T_STRING    shift, and go to state 8
    T_BOOL      shift, and go to state 9
    T_VOID      shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    INTEGER     shift, and go to state 12
    CHAR        shift, and go to state 13
    STRING      shift, and go to state 14
    SEMICOLON   shift, and go to state 15
    LBRACE      shift, and go to state 16
    TAKEADDR    shift, and go to state 17
    MINUS       shift, and go to state 18

    $default  reduce using rule 1 (program)

    statement    go to state 46
    declaration  go to state 22
    assign       go to state 23
    if_else      go to state 24
    while        go to state 25
    printf       go to state 26
    scanf        go to state 27
    for          go to state 28
    expr         go to state 29
    T            go to state 30


State 21

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 22

    5 statement: declaration .

    $default  reduce using rule 5 (statement)


State 23

    6 statement: assign . SEMICOLON

    SEMICOLON  shift, and go to state 47


State 24

   10 statement: if_else .

    $default  reduce using rule 10 (statement)


State 25

   11 statement: while .

    $default  reduce using rule 11 (statement)


State 26

   13 statement: printf . SEMICOLON

    SEMICOLON  shift, and go to state 48


State 27

   12 statement: scanf . SEMICOLON

    SEMICOLON  shift, and go to state 49


State 28

   14 statement: for .

    $default  reduce using rule 14 (statement)


State 29

    9 statement: expr . SEMICOLON
   38 expr: expr . ADD expr
   39     | expr . MINUS expr
   40     | expr . MUL expr
   41     | expr . DIV expr
   42     | expr . MOD expr
   44     | expr . SELFADD
   45     | expr . SELFMIN

    SEMICOLON  shift, and go to state 50
    ADD        shift, and go to state 51
    MINUS      shift, and go to state 52
    MUL        shift, and go to state 53
    DIV        shift, and go to state 54
    MOD        shift, and go to state 55
    SELFADD    shift, and go to state 56
    SELFMIN    shift, and go to state 57


State 30

   15 declaration: T . IDENTIFIER LOP_ASSIGN expr SEMICOLON
   16            | T . IDENTIFIERLIST SEMICOLON
   17            | T . MAIN LPAREN RPAREN statement

    IDENTIFIER  shift, and go to state 58
    MAIN        shift, and go to state 59

    IDENTIFIERLIST  go to state 60


State 31

   32 bool_statment: LPAREN . bool_expr RPAREN

    TRUE        shift, and go to state 61
    FALSE       shift, and go to state 62
    IDENTIFIER  shift, and go to state 42
    INTEGER     shift, and go to state 12
    CHAR        shift, and go to state 13
    STRING      shift, and go to state 14
    TAKEADDR    shift, and go to state 17
    MINUS       shift, and go to state 18
    NOT         shift, and go to state 63

    expr       go to state 64
    bool_expr  go to state 65


State 32

   23 if_else: IF bool_statment . statement
   24        | IF bool_statment . statement ELSE statement

    IF          shift, and go to state 1
    WHILE       shift, and go to state 2
    FOR         shift, and go to state 3
    PRINTF      shift, and go to state 4
    SCANF       shift, and go to state 5
    T_CHAR      shift, and go to state 6
    T_INT       shift, and go to state 7
    T_STRING    shift, and go to state 8
    T_BOOL      shift, and go to state 9
    T_VOID      shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    INTEGER     shift, and go to state 12
    CHAR        shift, and go to state 13
    STRING      shift, and go to state 14
    SEMICOLON   shift, and go to state 15
    LBRACE      shift, and go to state 16
    TAKEADDR    shift, and go to state 17
    MINUS       shift, and go to state 18

    statement    go to state 66
    declaration  go to state 22
    assign       go to state 23
    if_else      go to state 24
    while        go to state 25
    printf       go to state 26
    scanf        go to state 27
    for          go to state 28
    expr         go to state 29
    T            go to state 30


State 33

   25 while: WHILE bool_statment . statement

    IF          shift, and go to state 1
    WHILE       shift, and go to state 2
    FOR         shift, and go to state 3
    PRINTF      shift, and go to state 4
    SCANF       shift, and go to state 5
    T_CHAR      shift, and go to state 6
    T_INT       shift, and go to state 7
    T_STRING    shift, and go to state 8
    T_BOOL      shift, and go to state 9
    T_VOID      shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    INTEGER     shift, and go to state 12
    CHAR        shift, and go to state 13
    STRING      shift, and go to state 14
    SEMICOLON   shift, and go to state 15
    LBRACE      shift, and go to state 16
    TAKEADDR    shift, and go to state 17
    MINUS       shift, and go to state 18

    statement    go to state 67
    declaration  go to state 22
    assign       go to state 23
    if_else      go to state 24
    while        go to state 25
    printf       go to state 26
    scanf        go to state 27
    for          go to state 28
    expr         go to state 29
    T            go to state 30


State 34

   31 for: FOR LPAREN . declaration bool_expr SEMICOLON expr RPAREN statement

    T_CHAR    shift, and go to state 6
    T_INT     shift, and go to state 7
    T_STRING  shift, and go to state 8
    T_BOOL    shift, and go to state 9
    T_VOID    shift, and go to state 10

    declaration  go to state 68
    T            go to state 30


State 35

   26 printf: PRINTF LPAREN . expr COMMA expr RPAREN
   27       | PRINTF LPAREN . expr RPAREN

    IDENTIFIER  shift, and go to state 42
    INTEGER     shift, and go to state 12
    CHAR        shift, and go to state 13
    STRING      shift, and go to state 14
    TAKEADDR    shift, and go to state 17
    MINUS       shift, and go to state 18

    expr  go to state 69


State 36

   28 scanf: SCANF LPAREN . expr COMMA expr RPAREN
   29      | SCANF LPAREN . expr COMMA IDADDR RPAREN
   30      | SCANF LPAREN . expr RPAREN

    IDENTIFIER  shift, and go to state 42
    INTEGER     shift, and go to state 12
    CHAR        shift, and go to state 13
    STRING      shift, and go to state 14
    TAKEADDR    shift, and go to state 17
    MINUS       shift, and go to state 18

    expr  go to state 70


State 37

   20 assign: IDENTIFIER LOP_ASSIGN . expr

    IDENTIFIER  shift, and go to state 42
    INTEGER     shift, and go to state 12
    CHAR        shift, and go to state 13
    STRING      shift, and go to state 14
    TAKEADDR    shift, and go to state 17
    MINUS       shift, and go to state 18

    expr  go to state 71


State 38

   21 assign: IDENTIFIER MINASSIGN . expr

    IDENTIFIER  shift, and go to state 42
    INTEGER     shift, and go to state 12
    CHAR        shift, and go to state 13
    STRING      shift, and go to state 14
    TAKEADDR    shift, and go to state 17
    MINUS       shift, and go to state 18

    expr  go to state 72


State 39

   22 assign: IDENTIFIER ADDASSIGN . expr

    IDENTIFIER  shift, and go to state 42
    INTEGER     shift, and go to state 12
    CHAR        shift, and go to state 13
    STRING      shift, and go to state 14
    TAKEADDR    shift, and go to state 17
    MINUS       shift, and go to state 18

    expr  go to state 73


State 40

    8 statement: LBRACE RBRACE .

    $default  reduce using rule 8 (statement)


State 41

    3 statements: statements . statement
    7 statement: LBRACE statements . RBRACE

    IF          shift, and go to state 1
    WHILE       shift, and go to state 2
    FOR         shift, and go to state 3
    PRINTF      shift, and go to state 4
    SCANF       shift, and go to state 5
    T_CHAR      shift, and go to state 6
    T_INT       shift, and go to state 7
    T_STRING    shift, and go to state 8
    T_BOOL      shift, and go to state 9
    T_VOID      shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    INTEGER     shift, and go to state 12
    CHAR        shift, and go to state 13
    STRING      shift, and go to state 14
    SEMICOLON   shift, and go to state 15
    LBRACE      shift, and go to state 16
    RBRACE      shift, and go to state 74
    TAKEADDR    shift, and go to state 17
    MINUS       shift, and go to state 18

    statement    go to state 46
    declaration  go to state 22
    assign       go to state 23
    if_else      go to state 24
    while        go to state 25
    printf       go to state 26
    scanf        go to state 27
    for          go to state 28
    expr         go to state 29
    T            go to state 30


State 42

   33 expr: IDENTIFIER .

    $default  reduce using rule 33 (expr)


State 43

   38 expr: expr . ADD expr
   39     | expr . MINUS expr
   40     | expr . MUL expr
   41     | expr . DIV expr
   42     | expr . MOD expr
   43     | TAKEADDR expr .
   44     | expr . SELFADD
   45     | expr . SELFMIN

    SELFADD  shift, and go to state 56
    SELFMIN  shift, and go to state 57

    $default  reduce using rule 43 (expr)


State 44

   37 expr: MINUS expr .
   38     | expr . ADD expr
   39     | expr . MINUS expr
   40     | expr . MUL expr
   41     | expr . DIV expr
   42     | expr . MOD expr
   44     | expr . SELFADD
   45     | expr . SELFMIN

    SELFADD  shift, and go to state 56
    SELFMIN  shift, and go to state 57

    $default  reduce using rule 37 (expr)


State 45

    0 $accept: program $end .

    $default  accept


State 46

    3 statements: statements statement .

    $default  reduce using rule 3 (statements)


State 47

    6 statement: assign SEMICOLON .

    $default  reduce using rule 6 (statement)


State 48

   13 statement: printf SEMICOLON .

    $default  reduce using rule 13 (statement)


State 49

   12 statement: scanf SEMICOLON .

    $default  reduce using rule 12 (statement)


State 50

    9 statement: expr SEMICOLON .

    $default  reduce using rule 9 (statement)


State 51

   38 expr: expr ADD . expr

    IDENTIFIER  shift, and go to state 42
    INTEGER     shift, and go to state 12
    CHAR        shift, and go to state 13
    STRING      shift, and go to state 14
    TAKEADDR    shift, and go to state 17
    MINUS       shift, and go to state 18

    expr  go to state 75


State 52

   39 expr: expr MINUS . expr

    IDENTIFIER  shift, and go to state 42
    INTEGER     shift, and go to state 12
    CHAR        shift, and go to state 13
    STRING      shift, and go to state 14
    TAKEADDR    shift, and go to state 17
    MINUS       shift, and go to state 18

    expr  go to state 76


State 53

   40 expr: expr MUL . expr

    IDENTIFIER  shift, and go to state 42
    INTEGER     shift, and go to state 12
    CHAR        shift, and go to state 13
    STRING      shift, and go to state 14
    TAKEADDR    shift, and go to state 17
    MINUS       shift, and go to state 18

    expr  go to state 77


State 54

   41 expr: expr DIV . expr

    IDENTIFIER  shift, and go to state 42
    INTEGER     shift, and go to state 12
    CHAR        shift, and go to state 13
    STRING      shift, and go to state 14
    TAKEADDR    shift, and go to state 17
    MINUS       shift, and go to state 18

    expr  go to state 78


State 55

   42 expr: expr MOD . expr

    IDENTIFIER  shift, and go to state 42
    INTEGER     shift, and go to state 12
    CHAR        shift, and go to state 13
    STRING      shift, and go to state 14
    TAKEADDR    shift, and go to state 17
    MINUS       shift, and go to state 18

    expr  go to state 79


State 56

   44 expr: expr SELFADD .

    $default  reduce using rule 44 (expr)


State 57

   45 expr: expr SELFMIN .

    $default  reduce using rule 45 (expr)


State 58

   15 declaration: T IDENTIFIER . LOP_ASSIGN expr SEMICOLON
   18 IDENTIFIERLIST: IDENTIFIER .

    LOP_ASSIGN  shift, and go to state 80

    $default  reduce using rule 18 (IDENTIFIERLIST)


State 59

   17 declaration: T MAIN . LPAREN RPAREN statement

    LPAREN  shift, and go to state 81


State 60

   16 declaration: T IDENTIFIERLIST . SEMICOLON
   19 IDENTIFIERLIST: IDENTIFIERLIST . COMMA IDENTIFIER

    SEMICOLON  shift, and go to state 82
    COMMA      shift, and go to state 83


State 61

   46 bool_expr: TRUE .

    $default  reduce using rule 46 (bool_expr)


State 62

   47 bool_expr: FALSE .

    $default  reduce using rule 47 (bool_expr)


State 63

   56 bool_expr: NOT . bool_expr

    TRUE        shift, and go to state 61
    FALSE       shift, and go to state 62
    IDENTIFIER  shift, and go to state 42
    INTEGER     shift, and go to state 12
    CHAR        shift, and go to state 13
    STRING      shift, and go to state 14
    TAKEADDR    shift, and go to state 17
    MINUS       shift, and go to state 18
    NOT         shift, and go to state 63

    expr       go to state 64
    bool_expr  go to state 84


State 64

   38 expr: expr . ADD expr
   39     | expr . MINUS expr
   40     | expr . MUL expr
   41     | expr . DIV expr
   42     | expr . MOD expr
   44     | expr . SELFADD
   45     | expr . SELFMIN
   48 bool_expr: expr .

    ADD      shift, and go to state 51
    MINUS    shift, and go to state 52
    MUL      shift, and go to state 53
    DIV      shift, and go to state 54
    MOD      shift, and go to state 55
    SELFADD  shift, and go to state 56
    SELFMIN  shift, and go to state 57

    $default  reduce using rule 48 (bool_expr)


State 65

   32 bool_statment: LPAREN bool_expr . RPAREN
   49 bool_expr: bool_expr . LOP_EQ bool_expr
   50          | bool_expr . LOG_AND bool_expr
   51          | bool_expr . LOG_OR bool_expr
   52          | bool_expr . MORETHAN bool_expr
   53          | bool_expr . LESSTHAN bool_expr
   54          | bool_expr . MORETHANEQ bool_expr
   55          | bool_expr . LESSTHANEQ bool_expr

    RPAREN      shift, and go to state 85
    LOG_AND     shift, and go to state 86
    LOG_OR      shift, and go to state 87
    LESSTHAN    shift, and go to state 88
    MORETHAN    shift, and go to state 89
    LESSTHANEQ  shift, and go to state 90
    MORETHANEQ  shift, and go to state 91
    LOP_EQ      shift, and go to state 92


State 66

   23 if_else: IF bool_statment statement .
   24        | IF bool_statment statement . ELSE statement

    ELSE  shift, and go to state 93

    $default  reduce using rule 23 (if_else)


State 67

   25 while: WHILE bool_statment statement .

    $default  reduce using rule 25 (while)


State 68

   31 for: FOR LPAREN declaration . bool_expr SEMICOLON expr RPAREN statement

    TRUE        shift, and go to state 61
    FALSE       shift, and go to state 62
    IDENTIFIER  shift, and go to state 42
    INTEGER     shift, and go to state 12
    CHAR        shift, and go to state 13
    STRING      shift, and go to state 14
    TAKEADDR    shift, and go to state 17
    MINUS       shift, and go to state 18
    NOT         shift, and go to state 63

    expr       go to state 64
    bool_expr  go to state 94


State 69

   26 printf: PRINTF LPAREN expr . COMMA expr RPAREN
   27       | PRINTF LPAREN expr . RPAREN
   38 expr: expr . ADD expr
   39     | expr . MINUS expr
   40     | expr . MUL expr
   41     | expr . DIV expr
   42     | expr . MOD expr
   44     | expr . SELFADD
   45     | expr . SELFMIN

    COMMA    shift, and go to state 95
    RPAREN   shift, and go to state 96
    ADD      shift, and go to state 51
    MINUS    shift, and go to state 52
    MUL      shift, and go to state 53
    DIV      shift, and go to state 54
    MOD      shift, and go to state 55
    SELFADD  shift, and go to state 56
    SELFMIN  shift, and go to state 57


State 70

   28 scanf: SCANF LPAREN expr . COMMA expr RPAREN
   29      | SCANF LPAREN expr . COMMA IDADDR RPAREN
   30      | SCANF LPAREN expr . RPAREN
   38 expr: expr . ADD expr
   39     | expr . MINUS expr
   40     | expr . MUL expr
   41     | expr . DIV expr
   42     | expr . MOD expr
   44     | expr . SELFADD
   45     | expr . SELFMIN

    COMMA    shift, and go to state 97
    RPAREN   shift, and go to state 98
    ADD      shift, and go to state 51
    MINUS    shift, and go to state 52
    MUL      shift, and go to state 53
    DIV      shift, and go to state 54
    MOD      shift, and go to state 55
    SELFADD  shift, and go to state 56
    SELFMIN  shift, and go to state 57


State 71

   20 assign: IDENTIFIER LOP_ASSIGN expr .
   38 expr: expr . ADD expr
   39     | expr . MINUS expr
   40     | expr . MUL expr
   41     | expr . DIV expr
   42     | expr . MOD expr
   44     | expr . SELFADD
   45     | expr . SELFMIN

    ADD      shift, and go to state 51
    MINUS    shift, and go to state 52
    MUL      shift, and go to state 53
    DIV      shift, and go to state 54
    MOD      shift, and go to state 55
    SELFADD  shift, and go to state 56
    SELFMIN  shift, and go to state 57

    $default  reduce using rule 20 (assign)


State 72

   21 assign: IDENTIFIER MINASSIGN expr .
   38 expr: expr . ADD expr
   39     | expr . MINUS expr
   40     | expr . MUL expr
   41     | expr . DIV expr
   42     | expr . MOD expr
   44     | expr . SELFADD
   45     | expr . SELFMIN

    ADD      shift, and go to state 51
    MINUS    shift, and go to state 52
    MUL      shift, and go to state 53
    DIV      shift, and go to state 54
    MOD      shift, and go to state 55
    SELFADD  shift, and go to state 56
    SELFMIN  shift, and go to state 57

    $default  reduce using rule 21 (assign)


State 73

   22 assign: IDENTIFIER ADDASSIGN expr .
   38 expr: expr . ADD expr
   39     | expr . MINUS expr
   40     | expr . MUL expr
   41     | expr . DIV expr
   42     | expr . MOD expr
   44     | expr . SELFADD
   45     | expr . SELFMIN

    ADD      shift, and go to state 51
    MINUS    shift, and go to state 52
    MUL      shift, and go to state 53
    DIV      shift, and go to state 54
    MOD      shift, and go to state 55
    SELFADD  shift, and go to state 56
    SELFMIN  shift, and go to state 57

    $default  reduce using rule 22 (assign)


State 74

    7 statement: LBRACE statements RBRACE .

    $default  reduce using rule 7 (statement)


State 75

   38 expr: expr . ADD expr
   38     | expr ADD expr .
   39     | expr . MINUS expr
   40     | expr . MUL expr
   41     | expr . DIV expr
   42     | expr . MOD expr
   44     | expr . SELFADD
   45     | expr . SELFMIN

    MUL      shift, and go to state 53
    DIV      shift, and go to state 54
    MOD      shift, and go to state 55
    SELFADD  shift, and go to state 56
    SELFMIN  shift, and go to state 57

    $default  reduce using rule 38 (expr)


State 76

   38 expr: expr . ADD expr
   39     | expr . MINUS expr
   39     | expr MINUS expr .
   40     | expr . MUL expr
   41     | expr . DIV expr
   42     | expr . MOD expr
   44     | expr . SELFADD
   45     | expr . SELFMIN

    MUL      shift, and go to state 53
    DIV      shift, and go to state 54
    MOD      shift, and go to state 55
    SELFADD  shift, and go to state 56
    SELFMIN  shift, and go to state 57

    $default  reduce using rule 39 (expr)


State 77

   38 expr: expr . ADD expr
   39     | expr . MINUS expr
   40     | expr . MUL expr
   40     | expr MUL expr .
   41     | expr . DIV expr
   42     | expr . MOD expr
   44     | expr . SELFADD
   45     | expr . SELFMIN

    SELFADD  shift, and go to state 56
    SELFMIN  shift, and go to state 57

    $default  reduce using rule 40 (expr)


State 78

   38 expr: expr . ADD expr
   39     | expr . MINUS expr
   40     | expr . MUL expr
   41     | expr . DIV expr
   41     | expr DIV expr .
   42     | expr . MOD expr
   44     | expr . SELFADD
   45     | expr . SELFMIN

    SELFADD  shift, and go to state 56
    SELFMIN  shift, and go to state 57

    $default  reduce using rule 41 (expr)


State 79

   38 expr: expr . ADD expr
   39     | expr . MINUS expr
   40     | expr . MUL expr
   41     | expr . DIV expr
   42     | expr . MOD expr
   42     | expr MOD expr .
   44     | expr . SELFADD
   45     | expr . SELFMIN

    SELFADD  shift, and go to state 56
    SELFMIN  shift, and go to state 57

    $default  reduce using rule 42 (expr)


State 80

   15 declaration: T IDENTIFIER LOP_ASSIGN . expr SEMICOLON

    IDENTIFIER  shift, and go to state 42
    INTEGER     shift, and go to state 12
    CHAR        shift, and go to state 13
    STRING      shift, and go to state 14
    TAKEADDR    shift, and go to state 17
    MINUS       shift, and go to state 18

    expr  go to state 99


State 81

   17 declaration: T MAIN LPAREN . RPAREN statement

    RPAREN  shift, and go to state 100


State 82

   16 declaration: T IDENTIFIERLIST SEMICOLON .

    $default  reduce using rule 16 (declaration)


State 83

   19 IDENTIFIERLIST: IDENTIFIERLIST COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 101


State 84

   49 bool_expr: bool_expr . LOP_EQ bool_expr
   50          | bool_expr . LOG_AND bool_expr
   51          | bool_expr . LOG_OR bool_expr
   52          | bool_expr . MORETHAN bool_expr
   53          | bool_expr . LESSTHAN bool_expr
   54          | bool_expr . MORETHANEQ bool_expr
   55          | bool_expr . LESSTHANEQ bool_expr
   56          | NOT bool_expr .

    $default  reduce using rule 56 (bool_expr)


State 85

   32 bool_statment: LPAREN bool_expr RPAREN .

    $default  reduce using rule 32 (bool_statment)


State 86

   50 bool_expr: bool_expr LOG_AND . bool_expr

    TRUE        shift, and go to state 61
    FALSE       shift, and go to state 62
    IDENTIFIER  shift, and go to state 42
    INTEGER     shift, and go to state 12
    CHAR        shift, and go to state 13
    STRING      shift, and go to state 14
    TAKEADDR    shift, and go to state 17
    MINUS       shift, and go to state 18
    NOT         shift, and go to state 63

    expr       go to state 64
    bool_expr  go to state 102


State 87

   51 bool_expr: bool_expr LOG_OR . bool_expr

    TRUE        shift, and go to state 61
    FALSE       shift, and go to state 62
    IDENTIFIER  shift, and go to state 42
    INTEGER     shift, and go to state 12
    CHAR        shift, and go to state 13
    STRING      shift, and go to state 14
    TAKEADDR    shift, and go to state 17
    MINUS       shift, and go to state 18
    NOT         shift, and go to state 63

    expr       go to state 64
    bool_expr  go to state 103


State 88

   53 bool_expr: bool_expr LESSTHAN . bool_expr

    TRUE        shift, and go to state 61
    FALSE       shift, and go to state 62
    IDENTIFIER  shift, and go to state 42
    INTEGER     shift, and go to state 12
    CHAR        shift, and go to state 13
    STRING      shift, and go to state 14
    TAKEADDR    shift, and go to state 17
    MINUS       shift, and go to state 18
    NOT         shift, and go to state 63

    expr       go to state 64
    bool_expr  go to state 104


State 89

   52 bool_expr: bool_expr MORETHAN . bool_expr

    TRUE        shift, and go to state 61
    FALSE       shift, and go to state 62
    IDENTIFIER  shift, and go to state 42
    INTEGER     shift, and go to state 12
    CHAR        shift, and go to state 13
    STRING      shift, and go to state 14
    TAKEADDR    shift, and go to state 17
    MINUS       shift, and go to state 18
    NOT         shift, and go to state 63

    expr       go to state 64
    bool_expr  go to state 105


State 90

   55 bool_expr: bool_expr LESSTHANEQ . bool_expr

    TRUE        shift, and go to state 61
    FALSE       shift, and go to state 62
    IDENTIFIER  shift, and go to state 42
    INTEGER     shift, and go to state 12
    CHAR        shift, and go to state 13
    STRING      shift, and go to state 14
    TAKEADDR    shift, and go to state 17
    MINUS       shift, and go to state 18
    NOT         shift, and go to state 63

    expr       go to state 64
    bool_expr  go to state 106


State 91

   54 bool_expr: bool_expr MORETHANEQ . bool_expr

    TRUE        shift, and go to state 61
    FALSE       shift, and go to state 62
    IDENTIFIER  shift, and go to state 42
    INTEGER     shift, and go to state 12
    CHAR        shift, and go to state 13
    STRING      shift, and go to state 14
    TAKEADDR    shift, and go to state 17
    MINUS       shift, and go to state 18
    NOT         shift, and go to state 63

    expr       go to state 64
    bool_expr  go to state 107


State 92

   49 bool_expr: bool_expr LOP_EQ . bool_expr

    TRUE        shift, and go to state 61
    FALSE       shift, and go to state 62
    IDENTIFIER  shift, and go to state 42
    INTEGER     shift, and go to state 12
    CHAR        shift, and go to state 13
    STRING      shift, and go to state 14
    TAKEADDR    shift, and go to state 17
    MINUS       shift, and go to state 18
    NOT         shift, and go to state 63

    expr       go to state 64
    bool_expr  go to state 108


State 93

   24 if_else: IF bool_statment statement ELSE . statement

    IF          shift, and go to state 1
    WHILE       shift, and go to state 2
    FOR         shift, and go to state 3
    PRINTF      shift, and go to state 4
    SCANF       shift, and go to state 5
    T_CHAR      shift, and go to state 6
    T_INT       shift, and go to state 7
    T_STRING    shift, and go to state 8
    T_BOOL      shift, and go to state 9
    T_VOID      shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    INTEGER     shift, and go to state 12
    CHAR        shift, and go to state 13
    STRING      shift, and go to state 14
    SEMICOLON   shift, and go to state 15
    LBRACE      shift, and go to state 16
    TAKEADDR    shift, and go to state 17
    MINUS       shift, and go to state 18

    statement    go to state 109
    declaration  go to state 22
    assign       go to state 23
    if_else      go to state 24
    while        go to state 25
    printf       go to state 26
    scanf        go to state 27
    for          go to state 28
    expr         go to state 29
    T            go to state 30


State 94

   31 for: FOR LPAREN declaration bool_expr . SEMICOLON expr RPAREN statement
   49 bool_expr: bool_expr . LOP_EQ bool_expr
   50          | bool_expr . LOG_AND bool_expr
   51          | bool_expr . LOG_OR bool_expr
   52          | bool_expr . MORETHAN bool_expr
   53          | bool_expr . LESSTHAN bool_expr
   54          | bool_expr . MORETHANEQ bool_expr
   55          | bool_expr . LESSTHANEQ bool_expr

    SEMICOLON   shift, and go to state 110
    LOG_AND     shift, and go to state 86
    LOG_OR      shift, and go to state 87
    LESSTHAN    shift, and go to state 88
    MORETHAN    shift, and go to state 89
    LESSTHANEQ  shift, and go to state 90
    MORETHANEQ  shift, and go to state 91
    LOP_EQ      shift, and go to state 92


State 95

   26 printf: PRINTF LPAREN expr COMMA . expr RPAREN

    IDENTIFIER  shift, and go to state 42
    INTEGER     shift, and go to state 12
    CHAR        shift, and go to state 13
    STRING      shift, and go to state 14
    TAKEADDR    shift, and go to state 17
    MINUS       shift, and go to state 18

    expr  go to state 111


State 96

   27 printf: PRINTF LPAREN expr RPAREN .

    $default  reduce using rule 27 (printf)


State 97

   28 scanf: SCANF LPAREN expr COMMA . expr RPAREN
   29      | SCANF LPAREN expr COMMA . IDADDR RPAREN

    IDENTIFIER  shift, and go to state 42
    IDADDR      shift, and go to state 112
    INTEGER     shift, and go to state 12
    CHAR        shift, and go to state 13
    STRING      shift, and go to state 14
    TAKEADDR    shift, and go to state 17
    MINUS       shift, and go to state 18

    expr  go to state 113


State 98

   30 scanf: SCANF LPAREN expr RPAREN .

    $default  reduce using rule 30 (scanf)


State 99

   15 declaration: T IDENTIFIER LOP_ASSIGN expr . SEMICOLON
   38 expr: expr . ADD expr
   39     | expr . MINUS expr
   40     | expr . MUL expr
   41     | expr . DIV expr
   42     | expr . MOD expr
   44     | expr . SELFADD
   45     | expr . SELFMIN

    SEMICOLON  shift, and go to state 114
    ADD        shift, and go to state 51
    MINUS      shift, and go to state 52
    MUL        shift, and go to state 53
    DIV        shift, and go to state 54
    MOD        shift, and go to state 55
    SELFADD    shift, and go to state 56
    SELFMIN    shift, and go to state 57


State 100

   17 declaration: T MAIN LPAREN RPAREN . statement

    IF          shift, and go to state 1
    WHILE       shift, and go to state 2
    FOR         shift, and go to state 3
    PRINTF      shift, and go to state 4
    SCANF       shift, and go to state 5
    T_CHAR      shift, and go to state 6
    T_INT       shift, and go to state 7
    T_STRING    shift, and go to state 8
    T_BOOL      shift, and go to state 9
    T_VOID      shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    INTEGER     shift, and go to state 12
    CHAR        shift, and go to state 13
    STRING      shift, and go to state 14
    SEMICOLON   shift, and go to state 15
    LBRACE      shift, and go to state 16
    TAKEADDR    shift, and go to state 17
    MINUS       shift, and go to state 18

    statement    go to state 115
    declaration  go to state 22
    assign       go to state 23
    if_else      go to state 24
    while        go to state 25
    printf       go to state 26
    scanf        go to state 27
    for          go to state 28
    expr         go to state 29
    T            go to state 30


State 101

   19 IDENTIFIERLIST: IDENTIFIERLIST COMMA IDENTIFIER .

    $default  reduce using rule 19 (IDENTIFIERLIST)


State 102

   49 bool_expr: bool_expr . LOP_EQ bool_expr
   50          | bool_expr . LOG_AND bool_expr
   50          | bool_expr LOG_AND bool_expr .
   51          | bool_expr . LOG_OR bool_expr
   52          | bool_expr . MORETHAN bool_expr
   53          | bool_expr . LESSTHAN bool_expr
   54          | bool_expr . MORETHANEQ bool_expr
   55          | bool_expr . LESSTHANEQ bool_expr

    LESSTHAN    shift, and go to state 88
    MORETHAN    shift, and go to state 89
    LESSTHANEQ  shift, and go to state 90
    MORETHANEQ  shift, and go to state 91
    LOP_EQ      shift, and go to state 92

    $default  reduce using rule 50 (bool_expr)


State 103

   49 bool_expr: bool_expr . LOP_EQ bool_expr
   50          | bool_expr . LOG_AND bool_expr
   51          | bool_expr . LOG_OR bool_expr
   51          | bool_expr LOG_OR bool_expr .
   52          | bool_expr . MORETHAN bool_expr
   53          | bool_expr . LESSTHAN bool_expr
   54          | bool_expr . MORETHANEQ bool_expr
   55          | bool_expr . LESSTHANEQ bool_expr

    LOG_AND     shift, and go to state 86
    LESSTHAN    shift, and go to state 88
    MORETHAN    shift, and go to state 89
    LESSTHANEQ  shift, and go to state 90
    MORETHANEQ  shift, and go to state 91
    LOP_EQ      shift, and go to state 92

    $default  reduce using rule 51 (bool_expr)


State 104

   49 bool_expr: bool_expr . LOP_EQ bool_expr
   50          | bool_expr . LOG_AND bool_expr
   51          | bool_expr . LOG_OR bool_expr
   52          | bool_expr . MORETHAN bool_expr
   53          | bool_expr . LESSTHAN bool_expr
   53          | bool_expr LESSTHAN bool_expr .
   54          | bool_expr . MORETHANEQ bool_expr
   55          | bool_expr . LESSTHANEQ bool_expr

    $default  reduce using rule 53 (bool_expr)


State 105

   49 bool_expr: bool_expr . LOP_EQ bool_expr
   50          | bool_expr . LOG_AND bool_expr
   51          | bool_expr . LOG_OR bool_expr
   52          | bool_expr . MORETHAN bool_expr
   52          | bool_expr MORETHAN bool_expr .
   53          | bool_expr . LESSTHAN bool_expr
   54          | bool_expr . MORETHANEQ bool_expr
   55          | bool_expr . LESSTHANEQ bool_expr

    $default  reduce using rule 52 (bool_expr)


State 106

   49 bool_expr: bool_expr . LOP_EQ bool_expr
   50          | bool_expr . LOG_AND bool_expr
   51          | bool_expr . LOG_OR bool_expr
   52          | bool_expr . MORETHAN bool_expr
   53          | bool_expr . LESSTHAN bool_expr
   54          | bool_expr . MORETHANEQ bool_expr
   55          | bool_expr . LESSTHANEQ bool_expr
   55          | bool_expr LESSTHANEQ bool_expr .

    $default  reduce using rule 55 (bool_expr)


State 107

   49 bool_expr: bool_expr . LOP_EQ bool_expr
   50          | bool_expr . LOG_AND bool_expr
   51          | bool_expr . LOG_OR bool_expr
   52          | bool_expr . MORETHAN bool_expr
   53          | bool_expr . LESSTHAN bool_expr
   54          | bool_expr . MORETHANEQ bool_expr
   54          | bool_expr MORETHANEQ bool_expr .
   55          | bool_expr . LESSTHANEQ bool_expr

    $default  reduce using rule 54 (bool_expr)


State 108

   49 bool_expr: bool_expr . LOP_EQ bool_expr
   49          | bool_expr LOP_EQ bool_expr .
   50          | bool_expr . LOG_AND bool_expr
   51          | bool_expr . LOG_OR bool_expr
   52          | bool_expr . MORETHAN bool_expr
   53          | bool_expr . LESSTHAN bool_expr
   54          | bool_expr . MORETHANEQ bool_expr
   55          | bool_expr . LESSTHANEQ bool_expr

    LESSTHAN    shift, and go to state 88
    MORETHAN    shift, and go to state 89
    LESSTHANEQ  shift, and go to state 90
    MORETHANEQ  shift, and go to state 91

    $default  reduce using rule 49 (bool_expr)


State 109

   24 if_else: IF bool_statment statement ELSE statement .

    $default  reduce using rule 24 (if_else)


State 110

   31 for: FOR LPAREN declaration bool_expr SEMICOLON . expr RPAREN statement

    IDENTIFIER  shift, and go to state 42
    INTEGER     shift, and go to state 12
    CHAR        shift, and go to state 13
    STRING      shift, and go to state 14
    TAKEADDR    shift, and go to state 17
    MINUS       shift, and go to state 18

    expr  go to state 116


State 111

   26 printf: PRINTF LPAREN expr COMMA expr . RPAREN
   38 expr: expr . ADD expr
   39     | expr . MINUS expr
   40     | expr . MUL expr
   41     | expr . DIV expr
   42     | expr . MOD expr
   44     | expr . SELFADD
   45     | expr . SELFMIN

    RPAREN   shift, and go to state 117
    ADD      shift, and go to state 51
    MINUS    shift, and go to state 52
    MUL      shift, and go to state 53
    DIV      shift, and go to state 54
    MOD      shift, and go to state 55
    SELFADD  shift, and go to state 56
    SELFMIN  shift, and go to state 57


State 112

   29 scanf: SCANF LPAREN expr COMMA IDADDR . RPAREN

    RPAREN  shift, and go to state 118


State 113

   28 scanf: SCANF LPAREN expr COMMA expr . RPAREN
   38 expr: expr . ADD expr
   39     | expr . MINUS expr
   40     | expr . MUL expr
   41     | expr . DIV expr
   42     | expr . MOD expr
   44     | expr . SELFADD
   45     | expr . SELFMIN

    RPAREN   shift, and go to state 119
    ADD      shift, and go to state 51
    MINUS    shift, and go to state 52
    MUL      shift, and go to state 53
    DIV      shift, and go to state 54
    MOD      shift, and go to state 55
    SELFADD  shift, and go to state 56
    SELFMIN  shift, and go to state 57


State 114

   15 declaration: T IDENTIFIER LOP_ASSIGN expr SEMICOLON .

    $default  reduce using rule 15 (declaration)


State 115

   17 declaration: T MAIN LPAREN RPAREN statement .

    $default  reduce using rule 17 (declaration)


State 116

   31 for: FOR LPAREN declaration bool_expr SEMICOLON expr . RPAREN statement
   38 expr: expr . ADD expr
   39     | expr . MINUS expr
   40     | expr . MUL expr
   41     | expr . DIV expr
   42     | expr . MOD expr
   44     | expr . SELFADD
   45     | expr . SELFMIN

    RPAREN   shift, and go to state 120
    ADD      shift, and go to state 51
    MINUS    shift, and go to state 52
    MUL      shift, and go to state 53
    DIV      shift, and go to state 54
    MOD      shift, and go to state 55
    SELFADD  shift, and go to state 56
    SELFMIN  shift, and go to state 57


State 117

   26 printf: PRINTF LPAREN expr COMMA expr RPAREN .

    $default  reduce using rule 26 (printf)


State 118

   29 scanf: SCANF LPAREN expr COMMA IDADDR RPAREN .

    $default  reduce using rule 29 (scanf)


State 119

   28 scanf: SCANF LPAREN expr COMMA expr RPAREN .

    $default  reduce using rule 28 (scanf)


State 120

   31 for: FOR LPAREN declaration bool_expr SEMICOLON expr RPAREN . statement

    IF          shift, and go to state 1
    WHILE       shift, and go to state 2
    FOR         shift, and go to state 3
    PRINTF      shift, and go to state 4
    SCANF       shift, and go to state 5
    T_CHAR      shift, and go to state 6
    T_INT       shift, and go to state 7
    T_STRING    shift, and go to state 8
    T_BOOL      shift, and go to state 9
    T_VOID      shift, and go to state 10
    IDENTIFIER  shift, and go to state 11
    INTEGER     shift, and go to state 12
    CHAR        shift, and go to state 13
    STRING      shift, and go to state 14
    SEMICOLON   shift, and go to state 15
    LBRACE      shift, and go to state 16
    TAKEADDR    shift, and go to state 17
    MINUS       shift, and go to state 18

    statement    go to state 121
    declaration  go to state 22
    assign       go to state 23
    if_else      go to state 24
    while        go to state 25
    printf       go to state 26
    scanf        go to state 27
    for          go to state 28
    expr         go to state 29
    T            go to state 30


State 121

   31 for: FOR LPAREN declaration bool_expr SEMICOLON expr RPAREN statement .

    $default  reduce using rule 31 (for)

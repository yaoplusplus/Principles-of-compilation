this name : a
this name : b
0 2
lno@0	@29 program children: [3 7 21 28  ]
lno@1	@3 statement children: [0 1 2  ] stmt:decl
lno@1	@0 type type:int
lno@1	@1 variable varname: a
lno@1	@2 const type: 0
lno@2	@7 statement children: [4 5 6  ] stmt:decl
lno@2	@4 type type:int
lno@2	@5 variable varname: b
lno@2	@6 const type: 2
lno@7	@21 statement children: [11 15 20  ] stmt:if
lno@3	@11 expression children: [10  expr:?
lno@3	@10 expression children: [8 9  ] expr:bool_eq
lno@3	@8 const type: 2
lno@3	@9 const type: 3
lno@4	@15 statement children: [12 13 14  ] stmt:decl
lno@4	@12 type type:int
lno@4	@13 variable varname: b
lno@4	@14 const type: 2
lno@5	@20 statement children: [16 19  ] stmt:assign
lno@5	@16 variable varname: b
lno@5	@19 expression children: [17 18  ] expr:add
lno@5	@17 variable varname: b
lno@5	@18 const type: 2
lno@9	@28 statement children: [24 26 27  ] stmt:while
lno@7	@24 expression children: [22 23  ] expr:bool_eq
lno@7	@22 variable varname: a
lno@7	@23 variable varname: b
lno@8	@26 statement children: [25  stmt:printf
lno@8	@25 variable varname: a
lno@8	@27 statement stmt:skip
---------------------------------------------------
layernum: 0 addr: 0x7fffc8d440b0
 var: a type: int value: 0
 var: b type: int value: 2

layernum: 1 addr: 0x7fffc8d4a7e0
 var: b type: int value: 2

